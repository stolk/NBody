CXX=clang++-13
CC=clang-13
PERF=$(HOME)/src/pmu-tools/ocperf.py


AR=ar
PERF=$(HOME)/src/pmu-tools/ocperf.py

BASEPREFIX=../GBase/src
PIPREFIX=PI
DBLUNTPREFIX=$(HOME)/src/dutch-blunt/src
TTPREFIX=$(HOME)/src/ThreadTracer
TOPLEVPREFIX=$(HOME)/src/pmu-tools
TOPLEV=$(TOPLEVPREFIX)/toplev.py
BARPLOT=$(TOPLEVPREFIX)/tl-barplot.py
SDLPREFIX=/opt/SDL2

OPTIM=-O3

# Pick one of these for the CFLAGS:
#
# -DVECTORIZE=16 -march=skylake-avx512
# -DVECTORIZE=8 -mavx2

CFLAGS=\
  -DVECTORIZE=8 -mavx2 \
  -DXWIN -DLANDSCAPE -DUSECOREPROFILE -Dlinux \
  -D_POSIX_C_SOURCE=199309L \
  -D_DEFAULT_SOURCE \
  -DAPPVER=1.00 \
  -DLOGTAG=nbody \
  -I$(HOME)/include \
  -I$(DBLUNTPREFIX) \
  -I$(BASEPREFIX) \
  -I$(PIPREFIX) \
  -I$(TTPREFIX) \
  `$(SDLPREFIX)/bin/sdl2-config --cflags` \
  -g -Wall -Wshadow -Wno-conversion -Wno-missing-braces -Wno-old-style-cast -Wno-unknown-pragmas \
  -ffp-exception-behavior=maytrap \
  -MMD -MP \
  $(OPTIM)

#LDFLAGS += -fsanitize=address
#LDFLAGS += -fsanitize=float-divide-by-zero

#CFLAGS += -O0 -fno-omit-frame-pointer
#CFLAGS += -O0 -fsanitize=address -fno-omit-frame-pointer


CXXFLAGS:=$(CFLAGS) -std=c++11

CFLAGS += \
  -std=c99

BASEOBJS=\
  $(BASEPREFIX)/logx.o \
  $(BASEPREFIX)/elapsed.o \
  $(BASEPREFIX)/dbd.o \
  $(BASEPREFIX)/kv.o \
  $(BASEPREFIX)/nfy.o \
  $(BASEPREFIX)/assertreport.o \
  $(BASEPREFIX)/pidc.o \
  $(BASEPREFIX)/glpr.o \
  $(BASEPREFIX)/quad.o \
  $(BASEPREFIX)/pseudorand.o \
  $(BASEPREFIX)/wavdb.o \
  $(BASEPREFIX)/sticksignal.o \


PIOBJS=\
  $(PIPREFIX)/keymap.o \
  $(PIPREFIX)/view.o \
  $(PIPREFIX)/text.o \
  $(PIPREFIX)/ctrl.o \
  $(PIPREFIX)/ctrl_draw.o \
  $(PIPREFIX)/stars.o \
  $(PIPREFIX)/help.o \
  $(PIPREFIX)/cam.o \
  $(PIPREFIX)/debugdraw.o \
  $(PIPREFIX)/sdlthreadpooltask.o \
  $(PIPREFIX)/sdlthreadpool.o \


DBLUNTOBJS=\
  $(DBLUNTPREFIX)/dblunt.o

#  -lsteam_api \
	
LIBS=\
  -L. \
  -L$(HOME)/lib \
  `$(SDLPREFIX)/bin/sdl2-config --static-libs` \
  -lpthread \
  -lGL \
  -ldl \
  -lm

DISTDIR=nbody-1.00

SOUNDS=\
  Sounds/break00 Sounds/break01 Sounds/break02 Sounds/break03 Sounds/break04 Sounds/break05 Sounds/break06 Sounds/break07 Sounds/break08 Sounds/break09 Sounds/engine Sounds/expl Sounds/gun00 Sounds/gun01 Sounds/gun02 Sounds/gun03 Sounds/missile00 Sounds/missile01 Sounds/reload

ARTGAME=\
  Art/Game/alarm.png Art/Game/ammobounce.png Art/Game/ammoregular.png Art/Game/ammoseeking.png Art/Game/ammotriple.png Art/Game/bulletbounce.png Art/Game/bulletregular.png Art/Game/bulletseeking.png Art/Game/cloud.png Art/Game/contrail.png Art/Game/dust.png Art/Game/explosion.png Art/Game/feature.png Art/Game/finishflag.png Art/Game/flash.png Art/Game/gplaysin.png Art/Game/gplaysout.png Art/Game/health0.png Art/Game/health1.png Art/Game/health2.png Art/Game/health3.png Art/Game/healthkit.png Art/Game/hudammobounce.png Art/Game/hudammoregular.png Art/Game/hudammoseeking.png Art/Game/hudammotriple.png Art/Game/joypanel.png Art/Game/joyradial.png Art/Game/joystick.png Art/Game/leverhandle.png Art/Game/leverpanel.png Art/Game/locator.png Art/Game/modelsblu.png Art/Game/modelwblu.png Art/Game/pause.png Art/Game/reticule.png Art/Game/satelite.png Art/Game/shop.png Art/Game/tankbodblk.png Art/Game/tankbodblu.png Art/Game/tankbodred.png Art/Game/tankbrldbl.png Art/Game/tankbrlsin.png Art/Game/tanktrk.png Art/Game/tanktudblk.png Art/Game/tanktudred.png Art/Game/tankturblk.png Art/Game/tankturblu.png Art/Game/tankturred.png


VBOS=\
  VBOs/buggywheel_f.vbo \
  VBOs/buggychassis_f.vbo \
  VBOs/dozerbucket_f.vbo \
  VBOs/dozerarm_f.vbo \
  VBOs/groundplane_f.vbo \
  VBOs/dpistontop_f.vbo \
  VBOs/dpistonbtm_f.vbo \
  VBOs/pistontop_f.vbo \
  VBOs/pistonbtm_f.vbo \
  VBOs/spindle_f.vbo \
  VBOs/lowercontrolarm_f.vbo \
  VBOs/uppercontrolarm_f.vbo \
  VBOs/coilspring_f.vbo \
  VBOs/turret_f.vbo \
  VBOs/bullet_f.vbo \
  VBOs/doublebarrel_f.vbo \



#  -lopenal \
	#
#

all: nbody



run: nbody
	./nbody


nbody:libbase.a libdblunt.a libpi.a XWin/main.o $(TTPREFIX)/threadtracer.o
	$(CXX) $(LDFLAGS) -onbody XWin/main.o $(TTPREFIX)/threadtracer.o -lpi -ldblunt -lbase $(LIBS)

bench:libbase.a libpi.a PI/bench.o
	$(CXX) $(LDFLAGS) -obench PI/bench.o $(TTPREFIX)/threadtracer.o -lpi -lbase $(LIBS)


libbase.a:$(BASEOBJS)
	$(AR) rcsv $*.a $(BASEOBJS)

libpi.a:$(PIOBJS)
	$(AR) rcsv $*.a $(PIOBJS)

libdblunt.a: $(DBLUNTOBJS)
	$(AR) rcsv $*.a $(DBLUNTOBJS)


clean:
	rm -f nbody
	rm -f *.a
	rm -f $(BASEOBJS)
	rm -f $(DBLUNTOBJS)
	rm -f $(PIOBJS)
	rm -f XWin/main.o

graph.svg: nbody
	rm -f perf.data perf.data.old
	$(PERF) record -e cpu-cycles:pp --call-graph=dwarf ./nbody fs=0 vsync=0
	$(PERF) script | $(HOME)/src/FlameGraph/stackcollapse-perf.pl > out.perf-folded
	$(HOME)/src/FlameGraph/flamegraph.pl out.perf-folded > graph.svg
	-firefox graph.svg

toplev:
	$(TOPLEV) -l3 --single-thread --metric-group "+Ports_Utilization" -I 80 -x, -o x.csv ./bench 400
	#toplev.py -l3 --no-multiplex --single-thread --metric-group "+Ports_Utilization" -I 80 -x, -o x.csv ./blox
	#toplev.py -l5 --no-multiplex --single-thread --nodes "+ILP,+0_Ports_Utilized,+1_Port_Utilized,+2_Ports_Utilized,+3m_Ports_Utilized,-Frontend_Bound,-Frontend_Bandwidth,-Frontend_Latency,-Machine_Clears,-Branch_Resteers,-Branch_Mispredicts,-L1_Bound" -x, -o x.csv ./bench $(TEST)
	$(BARPLOT) -o out.pdf x.csv
	evince out.pdf

runningprofile:
	export ARMORPID=`pgrep nbody`
	echo $(ARMORPID)

dist:
	rm -rf $(DISTDIR)
	mkdir $(DISTDIR)
	mkdir $(DISTDIR)/Sounds
	mkdir $(DISTDIR)/Art
	mkdir $(DISTDIR)/Art/Game
	mkdir $(DISTDIR)/VBOs
	mkdir $(DISTDIR)/Worlds
	cp $(SOUNDS) $(DISTDIR)/Sounds/
	cp $(ARTGAME) $(DISTDIR)/Art/Game/
	cp VBOs/* $(DISTDIR)/VBOs/
	cp Worlds/* $(DISTDIR)/Worlds/
	cp nbody $(DISTDIR)/nbody
	tar cvzf ftt-linux-1.13.tar.gz $(DISTDIR)



-include $(BASEOBJS:.o=.d)
-include $(PIOBJS:.o=.d)
-include $(DBLUNTOBJS:.o=.d)
-include XWin/main.d


